<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="databases" type="WebApplications.Utilities.Database.Configuration.DatabasesConfiguration, WebApplications.Utilities.Database" />
    
  <section name="logging" type="WebApplications.Utilities.Logging.Configuration.LoggingConfiguration, WebApplications.Utilities.Logging" /></configSections>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="WebApplications.Utilities" publicKeyToken="35eae54bdace0802" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.5192.19907" newVersion="5.0.5192.19907" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Reactive.Core" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.0.0" newVersion="2.2.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Reactive.Interfaces" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.0.0" newVersion="2.2.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Reactive.Linq" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.0.0" newVersion="2.2.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Reactive.Providers" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.30214.0" newVersion="2.1.30214.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <databases>
    <database id="test">
      <connections>
        <connection>
          <add connectionString="Data Source=.\SQLEXPRESS;AttachDbFilename=|DataDirectory|\LocalData.mdf;Integrated Security=True;Connect Timeout=30;User Instance=True" />
          <add connectionString="Data Source=.\SQLEXPRESS;AttachDbFilename=|DataDirectory|\LocalDataCopy.mdf;Integrated Security=True;Connect Timeout=30;User Instance=True" />
        </connection>
        <connection id="copyonly">
          <add connectionString="Data Source=.\SQLEXPRESS;AttachDbFilename=|DataDirectory|\LocalDataCopy.mdf;Integrated Security=True;Connect Timeout=30;User Instance=True" />
        </connection>
        <connection id="different">
          <add connectionString="Data Source=.\SQLEXPRESS;AttachDbFilename=|DataDirectory|\DifferentLocalData.mdf;Integrated Security=True;Connect Timeout=30;User Instance=True" />
        </connection>
      </connections>
      <programs>
        <program name="spReturnsScalar" connection="copyonly" />
        <program name="spTakeByteArrayLength10" connection="different" constraintMode="Error" />
      </programs>
    </database>
    <database id="test2">
      <connections>
        <connection>
          <add connectionString="Data Source=.\SQLEXPRESS;AttachDbFilename=|DataDirectory|\DifferentLocalData.mdf;Integrated Security=True;Connect Timeout=30;User Instance=True" />
        </connection>
      </connections>
      <programs>
        <program name="TestProgram" mapTo="spTakesParamAndReturnsScalar">
          <parameter name="@P1" mapTo="@firstName" />
        </program>
      </programs>
    </database>
  </databases>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  
<logging logCacheExpiry="00:00:00">
    <!--
    The following arributes are allowed on the logging element (defaults shown):
           enabled="true"
           applicationName=""
           applicationGuid=(random GUID)
           validLevels="All"
           logCacheExpiry="00:10:00"
           logCacheMaximumEntries="10000"

    The logging system uses an internal MemoryCache to hold recent logs for quick retrieval.
    
    You can optionally initialise additional loggers by adding a loggers node.  The library includes the following loggers, but you can create new ones
    by implementing the "WebApplications.Utiltities.Logging.Interfaces.ILogger" interface.
    
    <loggers>
      The name attribute is required and must be unique.
      The type attribute is also required, and must descend from "WebApplications.Utiltities.Logging.Interfaces.ILogger"
      All attributes and any parameters listed are available to the constructor of the type specified.
      
      By default, the system adds a Trace Logger, to remove it uncomment the following:
      <remove name="Trace Logger" />

      The file logger logs to file.
      <add name="File Logger" type="WebApplications.Utilities.Logging.Loggers.FileLogger, WebApplications.Utilities.Logging" enabled="true" validLevels="All">
        <parameters>
          The file logger supports the following parameters:
          
          <add name="directory" value="C:\Logs" />
            Only the directory is required.
            
          <add name="maxLog" value="1000" />
            The maximum number of individual logs in a single log file.
          
          <add name="maxDuration" value="1.0:0:0" />
            The maximum period covered by log entries in a single log file (defaults to 1 day).
          
          <add name="format" value="Verbose,Xml" />
            Any format string accepted by Log.ToString() is acceptable.  Examples include:
              Verbose,Xml
              All,Json
              Basic,Header
              Message
              {Level} {TimeStamp}: {Message}
          
          <add name="fileNameFormat" value="{ApplicationName}-{DateTime:yyMMddHHmmssffff}" />
            The following substitutions are allowed in the fileNameFormat:
              ApplicationName = The application name (see as an attribute on the logging element
              ApplicationGuid = The application GUID (see as an attribute on the logging element
              DateTime = The date and time the log file was created.
            
            Note that the actual format will look like {directory}\{format}{de-dupe}.{extension}
            where de-dupe takes the form " (i)", where i is an integer.  De-dupe is added only 
            when a file name conflict is discovered.
          
          <add name="extension" value="" />
            If the extension is not specified then .xml is used for XML formats (only where the format
            is an explicit LogFormat including the LogFormat.Xml flag), .json is used for JSON formats
            (with the same proviso) and .log is used for everything else.
          
          <add name="buffer" value="65536" />
            The number of bytes used to buffer data being written out to files.
            
          <add name="autoFlush" value="false" />
            If set to true then the file will be flushed for each batch (~once per second).  This has
            a small performance impact.
        </parameters>
      </add>

      The event logger logs to the event viewer - in this example we only log Critical levels and 
      the logger is disabled:
      <add name="Event Logger" type="WebApplications.Utilities.Logging.Loggers.EventLogger, WebApplications.Utilities.Logging" validLevels="Critical" enabled="false">
        <parameters>
          <add name="eventLog" value="Application" />
            Specifies which event log to use, the source is always the ApplicationName as specified on
            the <logger> node.  Note that the event log must already exist to be used here.
            
          <add name="machineName" value="." />
            Specifies the machine to log to - you must have access to writing event logs on the
            specified machine.
                    
          <add name="format" value="Verbose,Xml" />
            Any format string accepted by Log.ToString() is acceptable.
          
        </parameters>
      </add>
    </loggers>
    -->
  </logging></configuration>