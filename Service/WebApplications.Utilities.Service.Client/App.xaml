<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:client="clr-namespace:WebApplications.Utilities.Service.Servicer"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" 
             x:Class="WebApplications.Utilities.Service.Servicer.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Dark Theme -->
                <ResourceDictionary Source="Themes/Metro/Dark/MetroDark.MSControls.Core.Implicit.xaml" />
                <ResourceDictionary Source="Themes/Metro/Dark/MetroDark.MSControls.Toolkit.Implicit.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <client:ViewModel x:Key="MainViewModel" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <client:BooleanToGridLengthConverter x:Key="BooleanToRowHeightConverter"/>
            <client:BooleanToDoubleConverter x:Key="BooleanToDoubleConverter"/>
            <client:BooleanToInvisibilityConverter x:Key="BooleanToInvisibilityConverter"/>

            <Color x:Key="BabelRed">#ED2726</Color>
            <SolidColorBrush x:Key="BackgroundBrush" Color="#FF292929" />
            <SolidColorBrush x:Key="DefaultHighlight" Color="DeepSkyBlue" />
            <SolidColorBrush x:Key="LogsHighlight" Color="MediumPurple" />
            <SolidColorBrush x:Key="CommandsHighlight" Color="ForestGreen" />
            <SolidColorBrush x:Key="BabelRedBrush" Color="{StaticResource BabelRed}" />

            <Style x:Key="LogRichTextBoxStyle" TargetType="{x:Type RichTextBox}">
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="Foreground" Value="#FFFFFFFF" />
            </Style>

            <Style BasedOn="{StaticResource GridSplitterStyle}" TargetType="{x:Type GridSplitter}">
                <Setter Property="Background" Value="{StaticResource ExpanderBackgroundBrush}" />
            </Style>

            <Style x:Key="MinimalButtonStyle" BasedOn="{StaticResource ButtonStyle}"  TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="Bd" Fill="{StaticResource TransparentBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="0" />
                                <ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentPresenter x:Name="contentPresenter" />
                                </ContentControl>
                                <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="0" />
                                <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed" StrokeThickness="0" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="LogoLabelStyle" TargetType="{x:Type Label}">
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Logos-12-02-14" />
                <Setter Property="FontSize" Value="32" />
            </Style>

            <Style x:Key="IconLabelStyle" TargetType="{x:Type Label}">
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Foreground" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}"/>
                <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#TR5-Icons-19-03-14" />
                <Setter Property="FontSize" Value="16" />
            </Style>

            <Style x:Key="IconButtonStyle" BasedOn="{StaticResource MinimalButtonStyle}" TargetType="{x:Type Button}">
                <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#TR5-Icons-19-03-14" />
                <Setter Property="FontSize" Value="16" />
            </Style>

            <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">10</system:Double>
            <system:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">10</system:Double>
            
            <ControlTemplate x:Key="ToolBarControlTemplate" TargetType="{x:Type ToolBar}">
                <Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="True" Background="{StaticResource TransparentBrush}">
                    <Grid x:Name="OverflowGrid" HorizontalAlignment="Right" Visibility="Hidden">
                        <ToggleButton x:Name="OverflowButton" ClickMode="Press" FocusVisualStyle="{x:Null}" IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{TemplateBinding HasOverflowItems}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Background" Value="#FFEEF5FD"/>
                                    <Setter Property="MinHeight" Value="0"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,3,3,0" SnapsToDevicePixels="True">
                                                    <Canvas HorizontalAlignment="Right" Height="7" Margin="7,2,2,2" SnapsToDevicePixels="True" VerticalAlignment="Bottom" Width="6">
                                                        <Path Data="M1,1.5L6,1.5" Stroke="White"/>
                                                        <Path Data="M0,0.5L5,0.5" Stroke="{TemplateBinding Foreground}"/>
                                                        <Path Data="M0.5,4L6.5,4 3.5,7z" Fill="White"/>
                                                        <Path Data="M-0.5,3L5.5,3 2.5,6z" Fill="{TemplateBinding Foreground}"/>
                                                    </Canvas>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="Bd" Value="#210080FF"/>
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                                        <Setter Property="Background" TargetName="Bd" Value="#210080FF"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="#FF6D6D6D"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding}" Value="true">
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Popup x:Name="OverflowPopup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="False">
                            <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                <Border x:Name="ToolBarSubMenuBorder" BorderBrush="#FFB6BDC5" BorderThickness="1" Background="#FFEEF5FD" RenderOptions.ClearTypeHint="Enabled">
                                    <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" FocusVisualStyle="{x:Null}" Focusable="True" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200"/>
                                </Border>
                            </Themes:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Margin" Value="0,0,11,0"/>
                                <Setter Property="CornerRadius" Value="3"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding}" Value="true">
                                        <Setter Property="CornerRadius" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                            <Thumb x:Name="ToolBarThumb" Margin="-3,-1,0,0" Padding="6,5,1,6" Width="10">
                                <Thumb.Style>
                                    <Style TargetType="{x:Type Thumb}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                                        <Rectangle>
                                                            <Rectangle.Fill>
                                                                <DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" Viewport="0,0,4,4" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                                                                    <DrawingBrush.Drawing>
                                                                        <DrawingGroup>
                                                                            <GeometryDrawing Brush="White" Geometry="M1,1L1,3 3,3 3,1z"/>
                                                                            <GeometryDrawing Brush="#FF6D6D6D" Geometry="M0,0L0,2 2,2 2,0z"/>
                                                                        </DrawingGroup>
                                                                    </DrawingBrush.Drawing>
                                                                </DrawingBrush>
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Cursor" Value="SizeAll"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Thumb.Style>
                            </Thumb>
                            <ContentPresenter x:Name="ToolBarHeader" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                            <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="True" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </DockPanel>
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsOverflowOpen" Value="True">
                        <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="False"/>
                    </Trigger>
                    <Trigger Property="Header" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="ToolBarTray.IsLocked" Value="True">
                        <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="True">
                        <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                        <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="True"/>
                        <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                    </Trigger>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
                        <Setter Property="Style" TargetName="OverflowButton">
                            <Setter.Value>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Background" Value="#FFEEF5FD"/>
                                    <Setter Property="MinHeight" Value="0"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3" SnapsToDevicePixels="True">
                                                    <Canvas HorizontalAlignment="Right" Height="6" Margin="2,7,2,2" SnapsToDevicePixels="True" VerticalAlignment="Bottom" Width="7">
                                                        <Path Data="M1.5,1L1.5,6" Stroke="White"/>
                                                        <Path Data="M0.5,0L0.5,5" Stroke="{TemplateBinding Foreground}"/>
                                                        <Path Data="M3.5,0.5L7,3.5 4,6.5z" Fill="White"/>
                                                        <Path Data="M3,-0.5L6,2.5 3,5.5z" Fill="{TemplateBinding Foreground}"/>
                                                    </Canvas>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="Bd" Value="#210080FF"/>
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                                        <Setter Property="Background" TargetName="Bd" Value="#210080FF"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="#FF6D6D6D"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding}" Value="true">
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Height" TargetName="ToolBarThumb" Value="10"/>
                        <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
                        <Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0"/>
                        <Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1"/>
                        <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
                        <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
                        <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
                        <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
                        <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
                        <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
                        <Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
                        <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
                        <Setter Property="Background" Value="#FFEEF5FD"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>

    </Application.Resources>
</Application>
